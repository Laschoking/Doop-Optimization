@import father :- tsv{resource ="father.facts",format=(int,int)} .
@import mother :- tsv{resource ="mother.facts",format=(int,int)} .

parent(?a,?b,?side_):-
  father(?a,?b,?side_1),
  ?side_ = ?side_1 .

parent(?a,?b,?side_):-
  mother(?a,?b,?side_1),
  ?side_ = ?side_1 .


ancestor(?a,?b,?side_):-
  parent(?a,?b,?side_1),
  ?side_ = ?side_1 .

ancestor(?a,?b,?side_):-
  parent(?a,?c,?side_1),
  ancestor(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

grandmother(?a,?b,?side_):-
  mother(?a,?c,?side_1),
  ancestor(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

sibling(?a,?b,?side_):-
  parent(?c,?a,?side_1),
  parent(?c,?b,?side_2),  
  ?a != ?b,
  merge_strat(2,?side_1 + ?side_2, side_).  

cousin(?a,?b,?side_):-
  ancestor(?c,?a,?side_1),
  ancestor(?c,?b,?side_2),  
  ?a != ?b,
  ~sibling(?a,?b,?side_1),
  ~sibling(?a,?b,?side_2),
  ~parent(?a,?b,?side_1),
  ~parent(?a,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).

relative(?a,?b,?side_):-
  sibling(?a,?c,?side_1),
  parent(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  


@export parent :- tsv{resource="parent.tsv",format=(int,int)} .
@export ancestor :- tsv{resource="ancestor.tsv",format=(int,int)} .
@export grandmother :- tsv{resource="grandmother.tsv",format=(int,int)} .
@export sibling :- tsv{resource="sibling.tsv",format=(int,int)} .
@export cousin :- tsv{resource="cousin.tsv",format=(int,int)} .
@export relative :- tsv{resource="relative.tsv",format=(int,int)} .
