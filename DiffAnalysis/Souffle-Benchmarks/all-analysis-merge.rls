@import father :- tsv{resource ="father.facts",format=(int,int)} .
@import mother :- tsv{resource ="mother.facts",format=(int,int)} .

parent(?a,?b,?side_):-
  father(?a,?b,?side_1),
  ?side_ = ?side_1 .

parent(?a,?b,?side_):-
  mother(?a,?b,?side_1),
  ?side_ = ?side_1 .


ancestor(?a,?b,?side_):-
  parent(?a,?b,?side_1),
  ?side_ = ?side_1 .

ancestor(?a,?b,?side_):-
  parent(?a,?c,?side_1),
  ancestor(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

grandmother(?a,?b,?side_):-
  mother(?a,?c,?side_1),
  ancestor(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

sibling(?a,?b,?side_):-
  parent(?c,?a,?side_1),
  parent(?c,?b,?side_2),  
  ?a != ?b,
  merge_strat(2,?side_1 + ?side_2, side_).  

cousin(?a,?b,?side_):-
  ancestor(?c,?a,?side_1),
  ancestor(?c,?b,?side_2),  
  ?a != ?b,
  ~sibling(?a,?b,?side_1),
  ~sibling(?a,?b,?side_2),
  ~parent(?a,?b,?side_1),
  ~parent(?a,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).

relative(?a,?b,?side_):-
  sibling(?a,?c,?side_1),
  parent(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  


@export parent :- tsv{resource="parent.tsv",format=(int,int)} .
@export ancestor :- tsv{resource="ancestor.tsv",format=(int,int)} .
@export grandmother :- tsv{resource="grandmother.tsv",format=(int,int)} .
@export sibling :- tsv{resource="sibling.tsv",format=(int,int)} .
@export cousin :- tsv{resource="cousin.tsv",format=(int,int)} .
@export relative :- tsv{resource="relative.tsv",format=(int,int)} .

% Orbits of cosmological objects
% Rafael Caballero-Rold\'an,2007
% Adopted from DES

@import orbits :- tsv{resource ="orbits.facts",format=(int,int)} .


orbits(?a,?b,?side_):-  
  orbits(?a,?c,?side_1), 
  orbits(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

satellite(?a,?b,?side_):-       
  orbits(?a,?b,?side_1),         
  ~intermediate(?a,?b,?side_1),
  ?side_ = ?side_1 .

intermediate(?a,?b,?side_):- 
  orbits(?a,?c,?side_1),      
  orbits(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

@export intermediate :- tsv{resource="intermediate.tsv",format=(int,int)} .
@export satellite :- tsv{resource="satellite.tsv",format=(int,int)} .



@import Check :- tsv{resource="Check.facts",format=(int,int,int,int,int,int)}.
@import In :- tsv{resource="In.facts",format=(int,int,int,int,int,int,int)}.

A(1,?i,?side_):-
  Check(_,?b,?c,?d,?e,?f,?side_1),
  In(_,?b,?c,?d,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(2,?i,?side_):-
  Check(?a,_,?c,?d,?e,?f,?side_1),
  In(?a,_,?c,?d,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(3,?i,?side_):-
  Check(?a,?b,_,?d,?e,?f,?side_1),
  In(?a,?b,_,?d,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(4,?i,?side_):-
  Check(?a,?b,?c,_,?e,?f,?side_1),
  In(?a,?b,?c,_,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(5,?i,?side_):-
  Check(?a,?b,?c,?d,_,?f,?side_1),
  In(?a,?b,?c,?d,_,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(6,?i,?side_):-
  Check(?a,?b,?c,?d,?e,_,?side_1),
  In(?a,?b,?c,?d,?e,_,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(7,?i,?side_):-
  Check(_,_,?c,?d,?e,?f,?side_1),
  In(_,_,?c,?d,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(8,?i,?side_):-
  Check(?a,_,_,?d,?e,?f,?side_1),
  In(?a,_,_,?d,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(9,?i,?side_):-
  Check(?a,?b,_,_,?e,?f,?side_1),
  In(?a,?b,_,_,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(10,?i,?side_):-
  Check(?a,?b,?c,_,_,?f,?side_1),
  In(?a,?b,?c,_,_,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(11,?i,?side_):-
  Check(?a,?b,?c,?d,_,_,?side_1),
  In(?a,?b,?c,?d,_,_,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(12,?i,?side_):-
  Check(_,_,_,?d,?e,?f,?side_1),
  In(_,_,_,?d,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(13,?i,?side_):-
  Check(?a,_,_,_,?e,?f,?side_1),
  In(?a,_,_,_,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(14,?i,?side_):-
  Check(?a,?b,_,_,_,?f,?side_1),
  In(?a,?b,_,_,_,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(15,?i,?side_):-
  Check(?a,?b,?c,_,_,_,?side_1),
  In(?a,?b,?c,_,_,_,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_).  

A(16,?i,?side_):-
  Check(_,_,_,_,?e,?f,?side_1),
  In(_,_,_,_,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(17,?i,?side_):-
  Check(?a,_,_,_,_,?f,?side_1),
  In(?a,_,_,_,_,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(18,?i,?side_):-
  Check(?a,?b,_,_,_,_,?side_1),
  In(?a,?b,_,_,_,_,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

A(19,?i,?side_):-
  Check(?a,?b,?c,?d,?e,?f,?side_1),
  In(?a,?b,?c,?d,?e,?f,?i,?side_2),
  merge_strat(2,?side_1 + ?side_2, side_). 

@export A :- tsv{resource="A.tsv",format=(int,int)} .

