@import father :- tsv{resource ="father.tsv",format=(string,string,int)} .
@import mother :- tsv{resource ="mother.tsv",format=(string,string,int)} .

A(1).A(10).C(1).C(2).C(3).C(4).C(5).C(6).C(7).C(8).C(9).

merge_strat(?n, ?a * ?m,?a):-
   A(?a),C(?n),C(?m),?m <= ?n.
merge_strat(?a,0,0):-
   C(?a).

parent(?a,?b,?side_):-
  father(?a,?b,?side_1),
  ?side_ = ?side_1 .

parent(?a,?b,?side_):-
  mother(?a,?b,?side_1),
  ?side_ = ?side_1 .


ancestor(?a,?b,?side_):-
  parent(?a,?b,?side_1),
  ?side_ = ?side_1 .

ancestor(?a,?b,?side_):-
  parent(?a,?c,?side_1),
  ancestor(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2,?side_).  

grandmother(?a,?b,?side_):-
  mother(?a,?c,?side_1),
  ancestor(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2,?side_).  

sibling(?a,?b,?side_):-
  parent(?c,?a,?side_1),
  parent(?c,?b,?side_2),  
  ?a != ?b,
  merge_strat(2,?side_1 + ?side_2,?side_).  

cousin(?a,?b,?side_):-
  ancestor(?c,?a,?side_1),
  ancestor(?c,?b,?side_2),  
  ?a != ?b,
  ~sibling(?a,?b,0),
  ~sibling(?a,?b,?side_),
  ~parent(?a,?b,0),
  ~parent(?a,?b,?side_),
  merge_strat(2,?side_1 + ?side_2,?side_).

relative(?a,?b,?side_):-
  sibling(?a,?c,?side_1),
  parent(?c,?b,?side_2),
  merge_strat(2,?side_1 + ?side_2,?side_).  


@export parent :- tsv{resource="parent.tsv",format=(string,string,int)} .
@export ancestor :- tsv{resource="ancestor.tsv",format=(string,string,int)} .
@export grandmother :- tsv{resource="grandmother.tsv",format=(string,string,int)} .
@export sibling :- tsv{resource="sibling.tsv",format=(string,string,int)} .
@export cousin :- tsv{resource="cousin.tsv",format=(string,string,int)} .
@export relative :- tsv{resource="relative.tsv",format=(string,string,int)} .
