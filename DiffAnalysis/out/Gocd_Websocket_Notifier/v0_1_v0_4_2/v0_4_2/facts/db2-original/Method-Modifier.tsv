public	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(int)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(java.lang.String,int)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onError(org.java_websocket.WebSocket,java.lang.Exception)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <init>()>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <init>(com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener)>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.GoPluginIdentifier pluginIdentifier()>
private	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>
private	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
private	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>
static	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <clinit>()>
	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: void <init>(com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin,int,java.lang.String)>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: int responseCode()>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.util.Map responseHeaders()>
public	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.lang.String responseBody()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void <init>()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: int getPort()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setPort(int)>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getHost()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setHost(java.lang.String)>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isHostSet()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: int getGoHttpPort()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoHttpPort(int)>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getGoUser()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoUser(java.lang.String)>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isGoUserSet()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getGoPassword()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoPassword(java.lang.String)>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isGoPasswordSet()>
public	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean hasBasicAuth()>
static	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void <clinit>()>
public	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void <init>(com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer,com.matt_richardson.gocd.websocket_notifier.PluginConfig)>
public	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: void <init>(com.matt_richardson.gocd.websocket_notifier.PluginConfig)>
	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: java.lang.String mergeInPipelineInstanceDetails(com.google.gson.JsonElement,com.google.gson.JsonElement)>
	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: com.google.gson.JsonElement downloadPipelineInstanceDetails(java.lang.String)>
public	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: java.lang.String extendMessageToIncludePipelineDetails(java.lang.String)>
static	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: void <clinit>()>
