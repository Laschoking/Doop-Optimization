/home/kotname/Documents/Diplom/Code/doop/DiffAnalysis/Java/Gocd_Websocket_Notifier/v0_4_2/Gocd_Websocket_Notifier.jar	/home/kotname/Documents/Diplom/Code/doop/DiffAnalysis/Java/Gocd_Websocket_Notifier/v0_4_2/Gocd_Websocket_Notifier.jar
groupId	groupId
com.matt-richardson	com.matt-richardson
/home/kotname/Documents/Diplom/Code/doop/DiffAnalysis/Java/Gocd_Websocket_Notifier/v0_4_2/Gocd_Websocket_Notifier.jar	/home/kotname/Documents/Diplom/Code/doop/DiffAnalysis/Java/Gocd_Websocket_Notifier/v0_4_2/Gocd_Websocket_Notifier.jar
artifactId	artifactId
gocd-websocket-notifier	gocd-websocket-notifier
/home/kotname/Documents/Diplom/Code/doop/DiffAnalysis/Java/Gocd_Websocket_Notifier/v0_4_2/Gocd_Websocket_Notifier.jar	/home/kotname/Documents/Diplom/Code/doop/DiffAnalysis/Java/Gocd_Websocket_Notifier/v0_4_2/Gocd_Websocket_Notifier.jar
version	version
0.4.2+build.60.sha.7d0b8bc	0.4.2+build.60.sha.7d0b8bc
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(int)>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(int)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(java.lang.String,int)>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(java.lang.String,int)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>
<<\\" connected\\">>	<<\\" connected\\">>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>
<<\\" has disconnected\\">>	<<\\" has disconnected\\">>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onError(org.java_websocket.WebSocket,java.lang.Exception)>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onError(org.java_websocket.WebSocket,java.lang.Exception)>
websocket error	websocket error
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>
sending \'	sending \'
<<\\"\' to \\">>	<<\\"\' to \\">>
\\"notification\\"	\\"notification\\"
\\"notifications-interested-in\\"	\\"notifications-interested-in\\"
\\"stage-status\\"	\\"stage-status\\"
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>
<<\\"Starting WebSocket server started on port: \\">>	<<\\"Starting WebSocket server started on port: \\">>
<<\\"WebSocket server started on port: \\">>	<<\\"WebSocket server started on port: \\">>
<<\\"Failed to launch WebSocket server on port: \\">>	<<\\"Failed to launch WebSocket server on port: \\">>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <init>()>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <init>(com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener)>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <init>(com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
<<\\"received go plugin api request \\">>	<<\\"received go plugin api request \\">>
notifications-interested-in	notifications-interested-in
stage-status	stage-status
<<\\"Invalid request name: \\">>	<<\\"Invalid request name: \\">>
<<\\"Failed to handle request with name: %s , and body: %s \\">>	<<\\"Failed to handle request with name: %s , and body: %s \\">>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.GoPluginIdentifier pluginIdentifier()>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.GoPluginIdentifier pluginIdentifier()>
received pluginIdentifier request	received pluginIdentifier request
notification	notification
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>
stage-status	stage-status
notifications	notifications
requesting details of stage-status notifications	requesting details of stage-status notifications
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
handling stage notification	handling stage notification
status	status
success	success
failed to notify pipeline listener	failed to notify pipeline listener
status	status
failure	failure
messages	messages
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <clinit>()>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <clinit>()>
1.0	1.0
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: void <init>(com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin,int,java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: void <init>(com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin,int,java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: int responseCode()>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: int responseCode()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.util.Map responseHeaders()>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.util.Map responseHeaders()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.lang.String responseBody()>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.lang.String responseBody()>
\\"gocd-websocket-notifier.conf\\"	\\"gocd-websocket-notifier.conf\\"
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void <init>()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void <init>()>
<<\\"\\">>	<<\\"\\">>
user.home	user.home
gocd-websocket-notifier.conf	gocd-websocket-notifier.conf
gocd-websocket-notifier.conf	gocd-websocket-notifier.conf
Config file %s was not found in %s. Using default values.	Config file %s was not found in %s. Using default values.
port	port
port	port
host	host
host	host
goHttpPort	goHttpPort
goHttpPort	goHttpPort
goUser	goUser
goUser	goUser
goPassword	goPassword
goPassword	goPassword
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: int getPort()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: int getPort()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setPort(int)>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setPort(int)>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getHost()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getHost()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setHost(java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setHost(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isHostSet()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isHostSet()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: int getGoHttpPort()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: int getGoHttpPort()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoHttpPort(int)>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoHttpPort(int)>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getGoUser()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getGoUser()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoUser(java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoUser(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isGoUserSet()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isGoUserSet()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getGoPassword()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: java.lang.String getGoPassword()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoPassword(java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void setGoPassword(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isGoPasswordSet()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean isGoPasswordSet()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean hasBasicAuth()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: boolean hasBasicAuth()>
<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void <clinit>()>	<com.matt_richardson.gocd.websocket_notifier.PluginConfig: void <clinit>()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void <init>(com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer,com.matt_richardson.gocd.websocket_notifier.PluginConfig)>	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void <init>(com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer,com.matt_richardson.gocd.websocket_notifier.PluginConfig)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
notify called with request name \'	notify called with request name \'
\' and requestBody \'	\' and requestBody \'
\'	\'
<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: void <init>(com.matt_richardson.gocd.websocket_notifier.PluginConfig)>	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: void <init>(com.matt_richardson.gocd.websocket_notifier.PluginConfig)>
<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: java.lang.String mergeInPipelineInstanceDetails(com.google.gson.JsonElement,com.google.gson.JsonElement)>	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: java.lang.String mergeInPipelineInstanceDetails(com.google.gson.JsonElement,com.google.gson.JsonElement)>
x-pipeline-instance-details	x-pipeline-instance-details
<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: com.google.gson.JsonElement downloadPipelineInstanceDetails(java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: com.google.gson.JsonElement downloadPipelineInstanceDetails(java.lang.String)>
http://localhost:	http://localhost:
/go/api/pipelines/	/go/api/pipelines/
/history	/history
:	:
<<\\"Basic \\">>	<<\\"Basic \\">>
Authorization	Authorization
pipelines	pipelines
<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: java.lang.String extendMessageToIncludePipelineDetails(java.lang.String)>	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: java.lang.String extendMessageToIncludePipelineDetails(java.lang.String)>
pipeline-name	pipeline-name
pipeline	pipeline
name	name
Failed to download pipeline instance details for requestBody \'	Failed to download pipeline instance details for requestBody \'
\'	\'
<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: void <clinit>()>	<com.matt_richardson.gocd.websocket_notifier.PipelineDetailsPopulator: void <clinit>()>
