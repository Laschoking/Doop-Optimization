javadoc.notree	javadoc.notree	0
${build.dir}/test/results	${build.dir}/test/results	0
javadoc.windowtitle	javadoc.windowtitle	0
javadoc.version	javadoc.version	0
build.generated.dir	build.generated.dir	0
**/*.java,**/*.form	**/*.java,**/*.form	0
6	6	0
mkdist.disabled	mkdist.disabled	0
**	**	0
<simplejavacalculator.Calculator: void <init>()>	<simplejavacalculator.Calculator: void <init>()>	0
javadoc.splitindex	javadoc.splitindex	0
${build.dir}/classes	${build.dir}/classes	0
Tan	Tan	0
manifest.file	manifest.file	0
5	5	0
<simplejavacalculator.SimpleJavaCalculator: void <init>()>	<simplejavacalculator.SimpleJavaCalculator: void <init>()>	0
3	3	0
javac.test.classpath	javac.test.classpath	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	0
<simplejavacalculator.Calculator: java.lang.Double reset()>	<simplejavacalculator.Calculator: java.lang.Double reset()>	0
7	7	0
Calculator PH	Calculator PH	0
annotation.processing.processors.list	annotation.processing.processors.list	0
includes	includes	0
javac.target	javac.target	0
javac.compilerargs	javac.compilerargs	0
/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_new/SimpleJavaCalculator.jar	/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_new/SimpleJavaCalculator.jar	0
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	0
simplejavacalculator.SimpleJavaCalculator	simplejavacalculator.SimpleJavaCalculator	0
x*x	x*x	0
annotation.processing.source.output	annotation.processing.source.output	0
dist.dir	dist.dir	0
<simplejavacalculator.BufferedImageCustom: void <init>()>	<simplejavacalculator.BufferedImageCustom: void <init>()>	0
manifest.mf	manifest.mf	0
annotation.processing.enabled.in.editor	annotation.processing.enabled.in.editor	0
C	C	0
/icon/icon.png	/icon/icon.png	0
annotation.processing.processor.options	annotation.processing.processor.options	0
${dist.dir}/SimpleJavaCalculator.jar	${dist.dir}/SimpleJavaCalculator.jar	0
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
jar.compress	jar.compress	0
javac.classpath	javac.classpath	0
<simplejavacalculator.UI: void writer(java.lang.Double)>	<simplejavacalculator.UI: void writer(java.lang.Double)>	0
oneDevidedBy	oneDevidedBy	0
javadoc.additionalparam	javadoc.additionalparam	0
false	false	0
test.src.dir	test.src.dir	0
javadoc.author	javadoc.author	0
1	1	0
${build.dir}/test/classes	${build.dir}/test/classes	0
meta.inf.dir	meta.inf.dir	0
0	0	0
<simplejavacalculator.UI: void <init>()>	<simplejavacalculator.UI: void <init>()>	0
UTF-8	UTF-8	0
xpowerofy	xpowerofy	0
8	8	0
default_platform	default_platform	0
build.classes.dir	build.classes.dir	0
${source.encoding}	${source.encoding}	0
<simplejavacalculator.UI: java.lang.Double reader()>	<simplejavacalculator.UI: java.lang.Double reader()>	0
sqrt	sqrt	0
excludes	excludes	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	0
javadoc.private	javadoc.private	0
src.dir	src.dir	0
debug.classpath	debug.classpath	0
"<<\\""\\"">>"	"<<\\""\\"">>"	0
squareRoot	squareRoot	0
add	add	0
4	4	0
1/x	1/x	0
2	2	0
javac.processorpath	javac.processorpath	0
javadoc.nonavbar	javadoc.nonavbar	0
${javac.classpath}	${javac.classpath}	0
build.test.results.dir	build.test.results.dir	0
cos	cos	0
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	0
rate	rate	0
javac.test.processorpath	javac.test.processorpath	0
9	9	0
/	/	0
Cos	Cos	0
multiply	multiply	0
${dist.dir}/javadoc	${dist.dir}/javadoc	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	0
=	=	0
javadoc.noindex	javadoc.noindex	0
build.sysclasspath	build.sysclasspath	0
build.dir	build.dir	0
build.test.classes.dir	build.test.classes.dir	0
${javac.test.classpath}	${javac.test.classpath}	0
test	test	0
x^y	x^y	0
x%	x%	0
Sin	Sin	0
build.generated.sources.dir	build.generated.sources.dir	0
build.classes.excludes	build.classes.excludes	0
-	-	0
javac.source	javac.source	0
${build.generated.sources.dir}/ap-source-output	${build.generated.sources.dir}/ap-source-output	0
annotation.processing.enabled	annotation.processing.enabled	0
abs	abs	0
<simplejavacalculator.UI: void init()>	<simplejavacalculator.UI: void init()>	0
abs(x)	abs(x)	0
javadoc.encoding	javadoc.encoding	0
dist.javadoc.dir	dist.javadoc.dir	0
dist.jar	dist.jar	0
run.jvmargs	run.jvmargs	0
normal	normal	0
log	log	0
${build.dir}/generated	${build.dir}/generated	0
${run.test.classpath}	${run.test.classpath}	0
1.8	1.8	0
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
run.test.classpath	run.test.classpath	0
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	0
run.classpath	run.classpath	0
${run.classpath}	${run.classpath}	0
square	square	0
source.encoding	source.encoding	0
${build.dir}/generated-sources	${build.dir}/generated-sources	0
build	build	0
Consolas	Consolas	0
*	*	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	0
debug.test.classpath	debug.test.classpath	0
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	0
true	true	0
${javac.test.classpath}:${build.test.classes.dir}	${javac.test.classpath}:${build.test.classes.dir}	0
log10(x)	log10(x)	0
dist	dist	0
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	0
tan	tan	0
Error while parse to binary.	Error while parse to binary.	0
divide	divide	0
javadoc.use	javadoc.use	0
Bin	Bin	0
platform.active	platform.active	0
${javac.classpath}:${build.classes.dir}	${javac.classpath}:${build.classes.dir}	0
ignore	ignore	0
+	+	0
sin	sin	0
annotation.processing.run.all.processors	annotation.processing.run.all.processors	0
main.class	main.class	0
src	src	0
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
minus	minus	0
<simplejavacalculator.UI: void parsetoBinary()>	<simplejavacalculator.UI: void parsetoBinary()>	0
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	0
javac.deprecation	javac.deprecation	0
${src.dir}/META-INF	${src.dir}/META-INF	0
dist.archive.excludes	dist.archive.excludes	0
<simplejavacalculator.BufferedImageCustom: java.awt.Image imageReturn()>	<simplejavacalculator.BufferedImageCustom: java.awt.Image imageReturn()>	10
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	10
