<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	<clinit>		simplejavacalculator.Calculator$BiOperatorModes	void	()V	0	0
<simplejavacalculator.UI: void init()>	init		simplejavacalculator.UI	void	()V	0	0
<simplejavacalculator.UI: void parsetoBinary()>	parsetoBinary		simplejavacalculator.UI	void	()V	0	0
<simplejavacalculator.UI: java.lang.Double reader()>	reader		simplejavacalculator.UI	java.lang.Double	()Ljava/lang/Double;	0	0
<simplejavacalculator.Calculator: void <init>()>	<init>		simplejavacalculator.Calculator	void	()V	0	0
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	<init>	java.lang.String,int	simplejavacalculator.Calculator$BiOperatorModes	void	(Ljava/lang/String;I)V	2	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	values		simplejavacalculator.Calculator$BiOperatorModes	simplejavacalculator.Calculator$BiOperatorModes[]	()[Lsimplejavacalculator/Calculator$BiOperatorModes;	0	0
<simplejavacalculator.SimpleJavaCalculator: void <init>()>	<init>		simplejavacalculator.SimpleJavaCalculator	void	()V	0	0
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	main	java.lang.String[]	simplejavacalculator.SimpleJavaCalculator	void	([Ljava/lang/String;)V	1	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	values		simplejavacalculator.Calculator$MonoOperatorModes	simplejavacalculator.Calculator$MonoOperatorModes[]	()[Lsimplejavacalculator/Calculator$MonoOperatorModes;	0	0
<simplejavacalculator.UI: void writer(java.lang.Double)>	writer	java.lang.Double	simplejavacalculator.UI	void	(Ljava/lang/Double;)V	1	0
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	calculateBi	simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double	simplejavacalculator.Calculator	java.lang.Double	(Lsimplejavacalculator/Calculator$BiOperatorModes;Ljava/lang/Double;)Ljava/lang/Double;	2	0
<simplejavacalculator.UI: void <init>()>	<init>		simplejavacalculator.UI	void	()V	0	0
<simplejavacalculator.Calculator: java.lang.Double reset()>	reset		simplejavacalculator.Calculator	java.lang.Double	()Ljava/lang/Double;	0	0
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	calculateMono	simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double	simplejavacalculator.Calculator	java.lang.Double	(Lsimplejavacalculator/Calculator$MonoOperatorModes;Ljava/lang/Double;)Ljava/lang/Double;	2	0
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	calculateEqual	java.lang.Double	simplejavacalculator.Calculator	java.lang.Double	(Ljava/lang/Double;)Ljava/lang/Double;	1	0
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	<init>	java.lang.String,int	simplejavacalculator.Calculator$MonoOperatorModes	void	(Ljava/lang/String;I)V	2	0
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	<clinit>		simplejavacalculator.Calculator$MonoOperatorModes	void	()V	0	0
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	calculateBiImpl		simplejavacalculator.Calculator	java.lang.Double	()Ljava/lang/Double;	0	0
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	actionPerformed	java.awt.event.ActionEvent	simplejavacalculator.UI	void	(Ljava/awt/event/ActionEvent;)V	1	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	valueOf	java.lang.String	simplejavacalculator.Calculator$BiOperatorModes	simplejavacalculator.Calculator$BiOperatorModes	(Ljava/lang/String;)Lsimplejavacalculator/Calculator$BiOperatorModes;	1	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	valueOf	java.lang.String	simplejavacalculator.Calculator$MonoOperatorModes	simplejavacalculator.Calculator$MonoOperatorModes	(Ljava/lang/String;)Lsimplejavacalculator/Calculator$MonoOperatorModes;	1	1
<simplejavacalculator.BufferedImageCustom: void <init>()>	<init>		simplejavacalculator.BufferedImageCustom	void	()V	0	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	valueOf	java.lang.String	simplejavacalculator.Calculator$BiOperatorModes	simplejavacalculator.Calculator$BiOperatorModes	(Ljava/lang/String;)Lsimplejavacalculator/Calculator$BiOperatorModes;	1	10
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	valueOf	java.lang.String	simplejavacalculator.Calculator$MonoOperatorModes	simplejavacalculator.Calculator$MonoOperatorModes	(Ljava/lang/String;)Lsimplejavacalculator/Calculator$MonoOperatorModes;	1	10
<simplejavacalculator.BufferedImageCustom: java.awt.Image imageReturn()>	imageReturn		simplejavacalculator.BufferedImageCustom	java.awt.Image	()Ljava/awt/Image;	0	10
