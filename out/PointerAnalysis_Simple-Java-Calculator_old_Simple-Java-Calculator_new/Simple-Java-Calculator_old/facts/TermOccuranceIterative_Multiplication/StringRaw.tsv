javac.deprecation	javac.deprecation
0	0
build.test.results.dir	build.test.results.dir
sqrt	sqrt
true	true
simplejavacalculator.SimpleJavaCalculator	simplejavacalculator.SimpleJavaCalculator
debug.classpath	debug.classpath
default_platform	default_platform
minus	minus
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>
javadoc.splitindex	javadoc.splitindex
oneDevidedBy	oneDevidedBy
${dist.dir}/SimpleJavaCalculator.jar	${dist.dir}/SimpleJavaCalculator.jar
src.dir	src.dir
cos	cos
javac.compilerargs	javac.compilerargs
annotation.processing.processors.list	annotation.processing.processors.list
javadoc.additionalparam	javadoc.additionalparam
javadoc.version	javadoc.version
javac.classpath	javac.classpath
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>
debug.test.classpath	debug.test.classpath
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>
${build.dir}/test/results	${build.dir}/test/results
javadoc.noindex	javadoc.noindex
Calculator PH	Calculator PH
x^y	x^y
-	-
add	add
javadoc.windowtitle	javadoc.windowtitle
${javac.classpath}	${javac.classpath}
${source.encoding}	${source.encoding}
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>
9	9
Cos	Cos
test.src.dir	test.src.dir
javac.test.classpath	javac.test.classpath
divide	divide
${dist.dir}/javadoc	${dist.dir}/javadoc
5	5
**	**
${javac.test.classpath}	${javac.test.classpath}
includes	includes
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>
javadoc.author	javadoc.author
dist.dir	dist.dir
build.dir	build.dir
platform.active	platform.active
javadoc.nonavbar	javadoc.nonavbar
${run.test.classpath}	${run.test.classpath}
build.test.classes.dir	build.test.classes.dir
multiply	multiply
src	src
abs(x)	abs(x)
dist.archive.excludes	dist.archive.excludes
Error while parse to binary.	Error while parse to binary.
${run.classpath}	${run.classpath}
ignore	ignore
<simplejavacalculator.SimpleJavaCalculator: void <init>()>	<simplejavacalculator.SimpleJavaCalculator: void <init>()>
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>
<simplejavacalculator.UI: void parsetoBinary()>	<simplejavacalculator.UI: void parsetoBinary()>
build.classes.excludes	build.classes.excludes
=	=
test	test
log	log
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>
7	7
run.jvmargs	run.jvmargs
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>
javac.processorpath	javac.processorpath
+	+
<simplejavacalculator.Calculator: void <init>()>	<simplejavacalculator.Calculator: void <init>()>
1	1
rate	rate
normal	normal
Consolas	Consolas
build.generated.sources.dir	build.generated.sources.dir
log10(x)	log10(x)
<simplejavacalculator.UI: void init()>	<simplejavacalculator.UI: void init()>
meta.inf.dir	meta.inf.dir
x*x	x*x
abs	abs
sin	sin
annotation.processing.enabled.in.editor	annotation.processing.enabled.in.editor
javac.test.processorpath	javac.test.processorpath
annotation.processing.run.all.processors	annotation.processing.run.all.processors
${build.dir}/classes	${build.dir}/classes
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>
*	*
main.class	main.class
squareRoot	squareRoot
build.sysclasspath	build.sysclasspath
<simplejavacalculator.Calculator: java.lang.Double reset()>	<simplejavacalculator.Calculator: java.lang.Double reset()>
mkdist.disabled	mkdist.disabled
xpowerofy	xpowerofy
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>
annotation.processing.enabled	annotation.processing.enabled
false	false
icon/icon.png	icon/icon.png
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>
excludes	excludes
dist.jar	dist.jar
4	4
javadoc.use	javadoc.use
<simplejavacalculator.UI: void writer(java.lang.Double)>	<simplejavacalculator.UI: void writer(java.lang.Double)>
dist	dist
annotation.processing.processor.options	annotation.processing.processor.options
manifest.mf	manifest.mf
x%	x%
javac.source	javac.source
source.encoding	source.encoding
UTF-8	UTF-8
javac.target	javac.target
1/x	1/x
${build.dir}/generated	${build.dir}/generated
${build.generated.sources.dir}/ap-source-output	${build.generated.sources.dir}/ap-source-output
6	6
/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_old/SimpleJavaCalculator.jar	/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_old/SimpleJavaCalculator.jar
manifest.file	manifest.file
"<<\\""\\"">>"	"<<\\""\\"">>"
dist.javadoc.dir	dist.javadoc.dir
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>
Bin	Bin
<simplejavacalculator.UI: void <init>()>	<simplejavacalculator.UI: void <init>()>
square	square
${build.dir}/test/classes	${build.dir}/test/classes
javadoc.notree	javadoc.notree
annotation.processing.source.output	annotation.processing.source.output
2	2
<simplejavacalculator.UI: java.lang.Double reader()>	<simplejavacalculator.UI: java.lang.Double reader()>
8	8
javadoc.private	javadoc.private
Tan	Tan
build.classes.dir	build.classes.dir
${build.dir}/generated-sources	${build.dir}/generated-sources
build.generated.dir	build.generated.dir
run.classpath	run.classpath
jar.compress	jar.compress
build	build
run.test.classpath	run.test.classpath
tan	tan
3	3
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>
C	C
**/*.java,**/*.form	**/*.java,**/*.form
1.8	1.8
/	/
${javac.test.classpath}:${build.test.classes.dir}	${javac.test.classpath}:${build.test.classes.dir}
javadoc.encoding	javadoc.encoding
Sin	Sin
${src.dir}/META-INF	${src.dir}/META-INF
${javac.classpath}:${build.classes.dir}	${javac.classpath}:${build.classes.dir}
