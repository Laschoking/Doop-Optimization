<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/new simplejavacalculator.Calculator$BiOperatorModes/3	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes multiply>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/new simplejavacalculator.Calculator$BiOperatorModes[]/0	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] $VALUES>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/new simplejavacalculator.Calculator$BiOperatorModes/4	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes divide>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/new simplejavacalculator.Calculator$BiOperatorModes/5	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes xpowerofy>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/new simplejavacalculator.Calculator$BiOperatorModes/2	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes minus>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/new simplejavacalculator.Calculator$BiOperatorModes/0	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/new simplejavacalculator.Calculator$BiOperatorModes/1	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes add>
