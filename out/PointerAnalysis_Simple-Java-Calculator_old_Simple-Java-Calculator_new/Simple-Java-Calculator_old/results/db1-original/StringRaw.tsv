<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>
<simplejavacalculator.Calculator: void <init>()>	<simplejavacalculator.Calculator: void <init>()>
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>
<simplejavacalculator.Calculator: java.lang.Double reset()>	<simplejavacalculator.Calculator: java.lang.Double reset()>
<simplejavacalculator.UI: void <init>()>	<simplejavacalculator.UI: void <init>()>
<simplejavacalculator.UI: void init()>	<simplejavacalculator.UI: void init()>
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>
<simplejavacalculator.UI: void parsetoBinary()>	<simplejavacalculator.UI: void parsetoBinary()>
<simplejavacalculator.UI: java.lang.Double reader()>	<simplejavacalculator.UI: java.lang.Double reader()>
<simplejavacalculator.UI: void writer(java.lang.Double)>	<simplejavacalculator.UI: void writer(java.lang.Double)>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>
normal	normal
add	add
minus	minus
multiply	multiply
divide	divide
xpowerofy	xpowerofy
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>
square	square
squareRoot	squareRoot
oneDevidedBy	oneDevidedBy
cos	cos
sin	sin
tan	tan
log	log
rate	rate
abs	abs
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>
0	0
1	1
2	2
3	3
4	4
5	5
6	6
7	7
8	8
9	9
Calculator PH	Calculator PH
icon/icon.png	icon/icon.png
Consolas	Consolas
+	+
-	-
*	*
/	/
=	=
sqrt	sqrt
x*x	x*x
1/x	1/x
Cos	Cos
Sin	Sin
Tan	Tan
x^y	x^y
log10(x)	log10(x)
x%	x%
abs(x)	abs(x)
C	C
Bin	Bin
"<<\\""\\"">>"	"<<\\""\\"">>"
Error while parse to binary.	Error while parse to binary.
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>
<simplejavacalculator.SimpleJavaCalculator: void <init>()>	<simplejavacalculator.SimpleJavaCalculator: void <init>()>
simplejavacalculator.SimpleJavaCalculator	simplejavacalculator.SimpleJavaCalculator
/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_old/SimpleJavaCalculator.jar	/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_old/SimpleJavaCalculator.jar
excludes	excludes
javac.test.classpath	javac.test.classpath
${javac.classpath}:${build.classes.dir}	${javac.classpath}:${build.classes.dir}
run.classpath	run.classpath
javac.processorpath	javac.processorpath
${javac.classpath}	${javac.classpath}
dist.javadoc.dir	dist.javadoc.dir
${dist.dir}/javadoc	${dist.dir}/javadoc
test.src.dir	test.src.dir
test	test
annotation.processing.enabled	annotation.processing.enabled
true	true
build.sysclasspath	build.sysclasspath
ignore	ignore
javac.compilerargs	javac.compilerargs
javadoc.noindex	javadoc.noindex
false	false
javadoc.private	javadoc.private
javadoc.author	javadoc.author
main.class	main.class
source.encoding	source.encoding
UTF-8	UTF-8
javac.source	javac.source
1.8	1.8
includes	includes
**	**
javadoc.use	javadoc.use
jar.compress	jar.compress
javadoc.nonavbar	javadoc.nonavbar
annotation.processing.enabled.in.editor	annotation.processing.enabled.in.editor
javadoc.notree	javadoc.notree
annotation.processing.processors.list	annotation.processing.processors.list
javac.deprecation	javac.deprecation
javadoc.additionalparam	javadoc.additionalparam
build.generated.sources.dir	build.generated.sources.dir
${build.dir}/generated-sources	${build.dir}/generated-sources
javadoc.splitindex	javadoc.splitindex
run.jvmargs	run.jvmargs
javadoc.encoding	javadoc.encoding
${source.encoding}	${source.encoding}
javac.classpath	javac.classpath
mkdist.disabled	mkdist.disabled
build.classes.excludes	build.classes.excludes
**/*.java,**/*.form	**/*.java,**/*.form
dist.jar	dist.jar
${dist.dir}/SimpleJavaCalculator.jar	${dist.dir}/SimpleJavaCalculator.jar
build.classes.dir	build.classes.dir
${build.dir}/classes	${build.dir}/classes
build.test.classes.dir	build.test.classes.dir
${build.dir}/test/classes	${build.dir}/test/classes
javadoc.windowtitle	javadoc.windowtitle
build.test.results.dir	build.test.results.dir
${build.dir}/test/results	${build.dir}/test/results
annotation.processing.processor.options	annotation.processing.processor.options
dist.dir	dist.dir
dist	dist
build.dir	build.dir
build	build
dist.archive.excludes	dist.archive.excludes
annotation.processing.source.output	annotation.processing.source.output
${build.generated.sources.dir}/ap-source-output	${build.generated.sources.dir}/ap-source-output
build.generated.dir	build.generated.dir
${build.dir}/generated	${build.dir}/generated
javadoc.version	javadoc.version
debug.test.classpath	debug.test.classpath
${run.test.classpath}	${run.test.classpath}
javac.target	javac.target
platform.active	platform.active
default_platform	default_platform
manifest.file	manifest.file
manifest.mf	manifest.mf
javac.test.processorpath	javac.test.processorpath
${javac.test.classpath}	${javac.test.classpath}
meta.inf.dir	meta.inf.dir
${src.dir}/META-INF	${src.dir}/META-INF
run.test.classpath	run.test.classpath
${javac.test.classpath}:${build.test.classes.dir}	${javac.test.classpath}:${build.test.classes.dir}
annotation.processing.run.all.processors	annotation.processing.run.all.processors
src.dir	src.dir
src	src
debug.classpath	debug.classpath
${run.classpath}	${run.classpath}
