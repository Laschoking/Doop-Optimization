<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>
<simplejavacalculator.UI: void init()>	<simplejavacalculator.UI: void init()>
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>
<simplejavacalculator.UI: java.lang.Double reader()>	<simplejavacalculator.UI: java.lang.Double reader()>
<simplejavacalculator.UI: void writer(java.lang.Double)>	<simplejavacalculator.UI: void writer(java.lang.Double)>
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>
<simplejavacalculator.UI: void parsetoBinary()>	<simplejavacalculator.UI: void parsetoBinary()>
<simplejavacalculator.UI: void <init>()>	<simplejavacalculator.UI: void <init>()>
square	square
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>
multiply	multiply
xpowerofy	xpowerofy
normal	normal
minus	minus
tan	tan
abs	abs
cos	cos
rate	rate
log	log
add	add
oneDevidedBy	oneDevidedBy
sin	sin
divide	divide
squareRoot	squareRoot
C	C
Error while parse to binary.	Error while parse to binary.
3	3
+	+
Cos	Cos
5	5
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>
x%	x%
0	0
Sin	Sin
9	9
8	8
abs(x)	abs(x)
Consolas	Consolas
-	-
6	6
4	4
1/x	1/x
x*x	x*x
icon/icon.png	icon/icon.png
sqrt	sqrt
=	=
7	7
log10(x)	log10(x)
Calculator PH	Calculator PH
"<<\\""\\"">>"	"<<\\""\\"">>"
1	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>
Bin	Bin
*	*
x^y	x^y
/	/
2	2
Tan	Tan
<simplejavacalculator.Calculator: java.lang.Double reset()>	<simplejavacalculator.Calculator: java.lang.Double reset()>
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>
<simplejavacalculator.Calculator: void <init>()>	<simplejavacalculator.Calculator: void <init>()>
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>
<simplejavacalculator.SimpleJavaCalculator: void <init>()>	<simplejavacalculator.SimpleJavaCalculator: void <init>()>
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>
simplejavacalculator.SimpleJavaCalculator	simplejavacalculator.SimpleJavaCalculator
/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_old/SimpleJavaCalculator.jar	/home/kotname/Documents/Diplom/Code/doop/master/DiffAnalysis/Java/Simple-Java-Calculator_old/SimpleJavaCalculator.jar
build.classes.excludes	build.classes.excludes
javac.test.processorpath	javac.test.processorpath
javac.processorpath	javac.processorpath
annotation.processing.enabled.in.editor	annotation.processing.enabled.in.editor
run.classpath	run.classpath
javadoc.version	javadoc.version
source.encoding	source.encoding
platform.active	platform.active
${source.encoding}	${source.encoding}
debug.test.classpath	debug.test.classpath
false	false
build	build
build.test.results.dir	build.test.results.dir
${javac.classpath}:${build.classes.dir}	${javac.classpath}:${build.classes.dir}
**/*.java,**/*.form	**/*.java,**/*.form
javadoc.notree	javadoc.notree
build.test.classes.dir	build.test.classes.dir
javadoc.private	javadoc.private
dist.archive.excludes	dist.archive.excludes
manifest.mf	manifest.mf
meta.inf.dir	meta.inf.dir
javadoc.noindex	javadoc.noindex
run.test.classpath	run.test.classpath
debug.classpath	debug.classpath
**	**
${javac.classpath}	${javac.classpath}
javadoc.windowtitle	javadoc.windowtitle
${src.dir}/META-INF	${src.dir}/META-INF
default_platform	default_platform
mkdist.disabled	mkdist.disabled
${build.generated.sources.dir}/ap-source-output	${build.generated.sources.dir}/ap-source-output
dist	dist
javac.test.classpath	javac.test.classpath
${build.dir}/generated	${build.dir}/generated
test.src.dir	test.src.dir
annotation.processing.processors.list	annotation.processing.processors.list
includes	includes
javac.compilerargs	javac.compilerargs
ignore	ignore
run.jvmargs	run.jvmargs
javadoc.use	javadoc.use
javadoc.nonavbar	javadoc.nonavbar
${build.dir}/classes	${build.dir}/classes
javadoc.encoding	javadoc.encoding
excludes	excludes
annotation.processing.run.all.processors	annotation.processing.run.all.processors
${javac.test.classpath}	${javac.test.classpath}
javac.target	javac.target
build.classes.dir	build.classes.dir
build.dir	build.dir
dist.jar	dist.jar
UTF-8	UTF-8
javadoc.splitindex	javadoc.splitindex
${dist.dir}/javadoc	${dist.dir}/javadoc
javadoc.additionalparam	javadoc.additionalparam
${run.classpath}	${run.classpath}
annotation.processing.enabled	annotation.processing.enabled
javac.classpath	javac.classpath
src	src
main.class	main.class
build.generated.sources.dir	build.generated.sources.dir
1.8	1.8
build.generated.dir	build.generated.dir
true	true
annotation.processing.source.output	annotation.processing.source.output
javadoc.author	javadoc.author
javac.source	javac.source
javac.deprecation	javac.deprecation
manifest.file	manifest.file
${build.dir}/test/results	${build.dir}/test/results
annotation.processing.processor.options	annotation.processing.processor.options
${build.dir}/test/classes	${build.dir}/test/classes
jar.compress	jar.compress
${javac.test.classpath}:${build.test.classes.dir}	${javac.test.classpath}:${build.test.classes.dir}
src.dir	src.dir
dist.javadoc.dir	dist.javadoc.dir
build.sysclasspath	build.sysclasspath
dist.dir	dist.dir
${build.dir}/generated-sources	${build.dir}/generated-sources
test	test
${dist.dir}/SimpleJavaCalculator.jar	${dist.dir}/SimpleJavaCalculator.jar
${run.test.classpath}	${run.test.classpath}
