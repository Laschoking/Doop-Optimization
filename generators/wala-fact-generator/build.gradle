plugins {
    id 'application'
    id 'java-library'
}

mainClassName = 'org.clyze.doop.wala.Main'

dependencies {
    api project(path: ':generators:fact-generator-common', configuration: 'shadow')
    implementation "org.python:jython:2.7.1b3"
    /// https://mvnrepository.com/artifact/com.ibm.wala/com.ibm.wala.util
    // implementation "com.ibm.wala:com.ibm.wala.util:1.4.3"
    // implementation "ext:com.ibm.wala.util:1.5.1-SNAPSHOT"
    implementation files('local-libs/com.ibm.wala.util-1.5.1-SNAPSHOT.jar')
    /// https://mvnrepository.com/artifact/com.ibm.wala/com.ibm.wala.core
    // implementation "com.ibm.wala:com.ibm.wala.core:1.4.3"
    // implementation "ext:com.ibm.wala.core:1.5.1-SNAPSHOT"
    implementation files('local-libs/com.ibm.wala.core-1.5.1-SNAPSHOT.jar')
    /// https://mvnrepository.com/artifact/com.ibm.wala/com.ibm.wala.shrike
    // implementation "com.ibm.wala:com.ibm.wala.shrike:1.4.3"
    // implementation "ext:com.ibm.wala.shrike:1.5.1-SNAPSHOT"
    implementation files('local-libs/com.ibm.wala.shrike-1.5.1-SNAPSHOT.jar')
    /// https://mvnrepository.com/artifact/com.ibm.wala/com.ibm.wala.dalvik
    // implementation "com.ibm.wala:com.ibm.wala.dalvik:1.4.3"
    // implementation "ext:com.ibm.wala.dalvik:1.5.1-SNAPSHOT"
    implementation files('local-libs/com.ibm.wala.dalvik-1.5.1-SNAPSHOT.jar')
    // implementation "ext:com.ibm.wala.cast:1.5.1-SNAPSHOT"
    implementation files('local-libs/com.ibm.wala.cast-1.5.1-SNAPSHOT.jar')
    // implementation "ext:com.ibm.wala.cast.java:1.5.1-SNAPSHOT"
    implementation files('local-libs/com.ibm.wala.cast.java-1.5.1-SNAPSHOT.jar')
    // implementation "ext:com.ibm.wala.cast.python:0.0.1-SNAPSHOT"
    implementation files('local-libs/com.ibm.wala.cast.python-0.0.1-SNAPSHOT.jar')
    // implementation "ext:com.ibm.wala.cast.lsp:0.0.1-SNAPSHOT"
    // implementation "commons-cli:commons-cli:1.3.1",
    // implementation "org.eclipse.lsp4j:org.eclipse.lsp4j:0.4.0"
    implementation 'org.smali:dexlib2:2.4.0'
}

//fatJar already exists
fatJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from { configurations.compileClasspath.collect { it.directory ? it : zipTree(it) } }
    with jar
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

startScripts.dependsOn fatJar
