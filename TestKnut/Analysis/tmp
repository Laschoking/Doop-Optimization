CommonSubExpression(?exp, [?BB1, [?BB2,nil]]),
BinaryExpressionBB(?BB3, ?exp):-
    BinaryExpressionBB(?BB1,?exp),
    MayPredecessorBBModuloThrow(?BB1,?BB3),
    NrOfPredBB(?BB3,2),
    BinaryExpressionBB(?BB2,?exp),
    ?BB1 < ?BB2,
    MayPredecessorBBModuloThrow(?BB2,?BB3).

CommonSubExpression(?exp, [?BB1, [?BB2, [?BB3,nil]]]),
BinaryExpressionBB(?BB4, ?exp):-
    BinaryExpressionBB(?BB1,?exp),
    MayPredecessorBBModuloThrow(?BB1,?BB4),
    NrOfPredBB(?BB4,3),
    BinaryExpressionBB(?BB2,?exp),
    ?BB1 < ?BB2,
    MayPredecessorBBModuloThrow(?BB2,?BB4),
    BinaryExpressionBB(?BB3,?exp),
    ?BB1 < ?BB3,
    ?BB2 < ?BB3, 
    MayPredecessorBBModuloThrow(?BB3,?BB4).

NoJoinExpressions(?BB3, ?exp):-
    BinaryExpressionBB(?BB1,?exp),
    MayPredecessorBBModuloThrow(?BB1,?BB3),
    NrOfPredBB(?BB3,?a),
    ?a > 1,
    ?b = count : {BinaryExpressionBB(?BB2, ?exp), MayPredecessorBBModuloThrow(?BB2, ?BB3)},
    ?b < ?a.



//UnaryExpression(?assign,?left, ?op, ?to):-
    //OperatorAt(?assign, ?op),
    //!If(?assign, _, _ ,_ ),
    //AssignUnop(?assign, _ , ?to, _),
    //AssignOperFrom(?assign,_, ?left).