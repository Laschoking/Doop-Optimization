.decl FunctionInvResolvesTo(?ctx: configuration.Context, ?insn:FunctionInvocation_Insn, ?val:Value, ?hctx:configuration.HContext, ?fun:Function)
.decl ResolvedFunctionActualParam(?ctx: configuration.Context, ?insn:FunctionInvocation_Insn, ?tofunction:Function, ?formalParamVar:Var, ?actualParamVar:Var)
.decl ResolvedFunctionHasActualParamForIndex(?ctx: configuration.Context, ?insn:FunctionInvocation_Insn, ?tofunction:Function, ?formalParamIndex:number)
.decl ResolvedFunctionMissingActualParamForIndex(?ctx: configuration.Context, ?insn:FunctionInvocation_Insn, ?tofunction:Function, ?formalParamIndex:number)
.decl ResolvedFunctionHasKeywordAndPositionalActualParamForIndex(?ctx: configuration.Context, ?insn:FunctionInvocation_Insn, ?tofunction:Function, ?formalParamIndex:number)
.decl ResolvedFunctionHasActualParamUptoIndex(?ctx: configuration.Context, ?insn:FunctionInvocation_Insn, ?tofunction:Function, ?formalParamIndex:number)
.decl ResolvedFunctionHasAllRequredParams(?ctx: configuration.Context, ?insn:FunctionInvocation_Insn, ?tofunction:Function)
.output ResolvedFunctionActualParam
.output ResolvedFunctionHasAllRequredParams

.output ResolvedFunctionHasKeywordAndPositionalActualParamForIndex
.output ResolvedFunctionMissingActualParamForIndex


configuration.ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tofunction):-
  isModeledFunction(?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?value, ?hctx, ?tofunction).

configuration.ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tofunction):-
  !isModeledFunction(?tofunction),
  ResolvedFunctionHasAllRequredParams(?callerCtx, ?invo, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?value, ?hctx, ?tofunction).

ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, ?formal),
  ActualPositionalParam(?formalIndex, ?invo, ?actual),
  !ActualKeywordParam(_, ?invo, ?paramName, _).


ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, ?formal),
  ActualKeywordParam(_, ?invo, ?paramName, ?actual),
  !ActualPositionalParam(?formalIndex, ?invo, _).


ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, ?formal),
  !ActualKeywordParam(_, ?invo, ?paramName, _),
  !ActualPositionalParam(?formalIndex, ?invo, _),
  FormalParam_DefaultValForName(?tofunction, ?paramName, ?actual).

ResolvedFunctionMissingActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  !ActualKeywordParam(_, ?invo, ?paramName, _),
  !ActualPositionalParam(?formalIndex, ?invo, _),
  !FormalParam_DefaultValForName(?tofunction, ?paramName, _).

ResolvedFunctionHasKeywordAndPositionalActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  ActualKeywordParam(_, ?invo, ?paramName, _),
  ActualPositionalParam(?formalIndex, ?invo, _).

ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, ?formal),
  ActualPositionalParam(?formalIndex - 1, ?invo, ?actual),
  !ActualKeywordParam(_, ?invo, ?paramName, _).


ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, ?formal),
  ActualKeywordParam(_, ?invo, ?paramName, ?actual),
  !ActualPositionalParam(?formalIndex - 1, ?invo, _).


ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, ?formal),
  !ActualKeywordParam(_, ?invo, ?paramName, _),
  !ActualPositionalParam(?formalIndex - 1, ?invo, _),
  FormalParam_DefaultValForName(?tofunction, ?paramName, ?actual).

ResolvedFunctionMissingActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  !ActualKeywordParam(_, ?invo, ?paramName, _),
  !ActualPositionalParam(?formalIndex - 1, ?invo, _),
  !FormalParam_DefaultValForName(?tofunction, ?paramName, _).

ResolvedFunctionHasKeywordAndPositionalActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  ActualKeywordParam(_, ?invo, ?paramName, _),
  ActualPositionalParam(?formalIndex - 1, ?invo, _).

ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, _),
  FormalParam(?formalIndex, _, ?tofunction, ?formal).

ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, 0):-
  ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, 0).

ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, ?index):-
  ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?index),
  ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, ?index - 1).

ResolvedFunctionHasAllRequredParams(?callerCtx, ?invo, ?tofunction):-
  ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, ?index),
  Function_NumOfRequiredParams(?tofunction, ?index + 1).


FunctionInvResolvesTo(?callerCtx, ?invo, ?value, ?hctx, ?tofunction):-
  VarPointsTo(?hctx, ?value, ?callerCtx, ?base),
  FunctionInvocation_Base(?invo, ?base),
  HeapAllocation_Type(?value, ?tofunction),
  isFunction(?tofunction).


isContext(?calleeCtx),
CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tofunction):-
  configuration.ContextRequest(?callerCtx, ?hctx, ?invocation, ?value, ?tofunction),
  configuration.ContextResponse(?callerCtx, ?hctx, ?invocation, ?value, ?calleeCtx).

.decl ResolvedActualParamValue(?callerCtx: configuration.Context, ?invo:Instruction, ?resolvedFunction:Function, ?paramName:symbol, ?hctx:configuration.HContext, ?paramValue:Value)

//FOR NON BOUND METHODS AND FOR FUNCTION CALLS

// Interprocedural Assign
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  (
    ActualPositionalParam(?paramIndex, ?invo, ?actual);
    ActualKeywordParam(_, ?invo, ?paramName, ?actual)
  ),
  VarPointsTo(?hctx, ?value, ?callerCtx, ?actual).

// Default arguments
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  !(
    ActualPositionalParam(?paramIndex, ?invo, _);
    ActualKeywordParam(_, ?invo, ?paramName, _)
  ),
  FormalParam_DefaultValForName(?tofunction, ?paramName, ?default),
  VarPointsTo(?hctx,  ?value, _, ?default).       //TODO: REVIEW this at some point

//FOR BOUND METHOD CALLS
VarPointsTo(?selfHctx, ?selfVal, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?selfHctx, ?selfVal):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  BoundMethodAllocationSelfArgument(?basehctx, ?baseValue, ?selfHctx, ?selfVal),
  FormalParam(0, ?paramName, ?tofunction, ?formal).

// Interprocedural Assign
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  (
    ActualPositionalParam(?paramIndex - 1, ?invo, ?actual);
    ActualKeywordParam(_, ?invo, ?paramName, ?actual)
  ),
  VarPointsTo(?hctx, ?value, ?callerCtx, ?actual).

// Default arguments
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  !(
    ActualPositionalParam(?paramIndex - 1, ?invo, _);
    ActualKeywordParam(_, ?invo, ?paramName, _)
  ),
  FormalParam_DefaultValForName(?tofunction, ?paramName, ?default),
  VarPointsTo(?hctx,  ?value, _, ?default).       //TODO: REVIEW this at some point

//VarPointsTo(?hctx, ?value, ?callerCtx, ?return):-
//  CallGraphEdge(?callerCtx, ?invo, _, ?tofunction),
//  ReachableContext(?callerCtx, ?function),
//  Instruction_Function(?invo, ?function),
//  AssignInstruction_To(?invo, ?return),
//  Instruction_Function(?retInsn, ?tofunction),
//  !(isReturnInstruction(?retInsn)),
//  isNoneValue(?value),
//  isImmutableHContext(?hctx).

VarPointsTo(?hctx, ?value, ?callerCtx, ?return):-
  CallGraphEdge(?callerCtx, ?invo, _, ?tofunction),
  ReachableContext(?callerCtx, ?function),
  Instruction_Function(?invo, ?function),
  AssignInstruction_To(?invo, ?return),
  isReturnNone_Insn(?retInsn),
  Instruction_Function(?retInsn, ?tofunction),
  isNoneValue(?value),
  isImmutableHContext(?hctx).

VarPointsTo(?hctx, ?value, ?callerCtx, ?return):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  !(isComprehensionFunction(?tofunction)),   //TODO: REVIEW THE PYTHON IR TO AVOID THIS UGLY HACK
  AssignInstruction_To(?invo, ?return),
  isReturnNonNone_Insn(?retInsn),
  Instruction_Function(?retInsn, ?tofunction),
  ReturnNonNone_Var(?retInsn, ?var),
  VarPointsTo(?hctx, ?value, ?calleeCtx, ?var).