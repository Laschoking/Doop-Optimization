#include "function-resolution-declarations.dl"

.output ResolvedFunctionActualParam
.output ResolvedFunctionHasAllRequiredParams
.output ResolvedFunctionHasKeywordAndPositionalActualParamForIndex
.output ResolvedFunctionMissingActualOrDefaultParamForIndex
.output ResolvedFunctionMissingActualParamForIndex


/*
 *  There are
 *
 *
 */

configuration.ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tofunction):-
  FunctionInvResolvesToSpecialFunction(?callerCtx, ?invo, ?value, ?hctx, ?tofunction).

configuration.ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tofunction):-
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?value, ?hctx, ?tofunction),
  ResolvedFunctionHasValidNumberOfActualParams(?callerCtx, ?invo, ?tofunction),
  ResolvedFunctionHasAllRequiredParams(?callerCtx, ?invo, ?tofunction).

isContext(?calleeCtx),
CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tofunction):-
  configuration.ContextRequest(?callerCtx, ?hctx, ?invocation, ?value, ?tofunction),
  configuration.ContextResponse(?callerCtx, ?hctx, ?invocation, ?value, ?calleeCtx).

//----------------------------------------------------------------------------------------------------------------------
//                                 FUNCTION INVOCATION RESOLVES TO FUNCTION
//----------------------------------------------------------------------------------------------------------------------


FunctionInvResolvesTo(?callerCtx, ?invo, ?value, ?hctx, ?tofunction):-
  VarPointsTo(?hctx, ?value, ?callerCtx, ?base),
  FunctionInvocation_Base(?invo, ?base),
  HeapAllocation_Type(?value, ?tofunction),
  isFunction(?tofunction).

FunctionInvResolvesTo(?callerCtx, ?invo, ?toFunVal, ?toFunHctx, ?tofunction):-
  FunctionInvocation_Base(?invo, ?base),
  VarPointsTo(?hctx, ?value, ?callerCtx, ?base),
  isClassObjectAllocation(?value),
  InstanceFieldPointsTo(?toFunHctx, ?toFunVal, "__init__", ?hctx, ?value),
  HeapAllocation_Type(?toFunVal, ?tofunction),
  isFunction(?tofunction).

FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?value, ?hctx, ?tofunction):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?value, ?hctx, ?tofunction),
  !isComprehensionFunction(?tofunction),
  !isModeledFunction(?tofunction).

FunctionInvResolvesToSpecialFunction(?callerCtx, ?invo, ?value, ?hctx, ?tofunction):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?value, ?hctx, ?tofunction),
  (isComprehensionFunction(?tofunction) ; isModeledFunction(?tofunction)).

//----------------------------------------------------------------------------------------------------------------------
//                           CHECKING FOR VALID NUMBER OF PARAMS (NOT MORE THAN THE ARITY OF THE METHOD)
//----------------------------------------------------------------------------------------------------------------------

ResolvedFunctionHasValidNumberOfActualParams(?callerCtx, ?invo, ?tofunction):-
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  !isConstructorMethod(?tofunction),
  FunctionInvocation_NumberOfActualParams(?invo, ?totalParams),
  Function_Arity(?tofunction, ?arity),
  ?arity >= ?totalParams.

ResolvedFunctionHasValidNumberOfActualParams(?callerCtx, ?invo, ?tofunction):-
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  isConstructorMethod(?tofunction),
  FunctionInvocation_NumberOfActualParams(?invo, ?totalParams),
  Function_Arity(?tofunction, ?arity),
  ?arity >= ?totalParams + 1.

ResolvedFunctionHasValidNumberOfActualParams(?callerCtx, ?invo, ?tofunction):-
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FunctionInvocation_NumberOfActualParams(?invo, ?totalParams),
  Function_Arity(?tofunction, ?arity),
  ?arity >= ?totalParams + 1.

ResolvedFunctionHasInvalidNumberOfActualParams(?callerCtx, ?invo, ?tofunction):-
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  !isConstructorMethod(?tofunction),
  FunctionInvocation_NumberOfActualParams(?invo, ?totalParams),
  Function_Arity(?tofunction, ?arity),
  ?arity < ?totalParams.

ResolvedFunctionHasInvalidNumberOfActualParams(?callerCtx, ?invo, ?tofunction):-
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  isConstructorMethod(?tofunction),
  FunctionInvocation_NumberOfActualParams(?invo, ?totalParams),
  Function_Arity(?tofunction, ?arity),
  ?arity < ?totalParams +1.

ResolvedFunctionHasInvalidNumberOfActualParams(?callerCtx, ?invo, ?tofunction):-
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FunctionInvocation_NumberOfActualParams(?invo, ?totalParams),
  Function_Arity(?tofunction, ?arity),
  ?arity < ?totalParams + 1.


//----------------------------------------------------------------------------------------------------------------------
//                              RESOLVING OF ACTUAL PARAMS (along with a couple of error cases)
//----------------------------------------------------------------------------------------------------------------------

//Unbound Functions/Methods

ResolvedFunctionHasActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  !isConstructorMethod(?tofunction),
  FormalParam(?formalIndex, _, ?tofunction, _),
  ActualPositionalParam(?formalIndex, ?invo, ?actual).

ResolvedFunctionNoActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  !isConstructorMethod(?tofunction),
  FormalParam(?formalIndex, _, ?tofunction, _),
  !ActualPositionalParam(?formalIndex, ?invo, _).

//Special for constructors
//TODO: review this at some point
ResolvedFunctionHasActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  isConstructorMethod(?tofunction),
  FormalParam(?formalIndex, _, ?tofunction, _),
  ActualPositionalParam(?formalIndex - 1, ?invo, ?actual).

ResolvedFunctionNoActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  isConstructorMethod(?tofunction),
  FormalParam(?formalIndex, _, ?tofunction, _),
  !ActualPositionalParam(?formalIndex - 1, ?invo, _).

//Bound Methods

ResolvedFunctionHasActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?formalIndex, _, ?tofunction, _),
  ActualPositionalParam(?formalIndex - 1, ?invo, ?actual).

ResolvedFunctionNoActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?formalIndex, _, ?tofunction, _),
  !ActualPositionalParam(?formalIndex - 1, ?invo, _).

ResolvedFunctionHasActualKeywordParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, ?actual):-
  FunctionInvResolvesTo(?callerCtx, ?invo, _, _, ?tofunction),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  ActualKeywordParam(_, ?invo, ?paramName, ?actual).

ResolvedFunctionNoActualKeywordParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  FunctionInvResolvesTo(?callerCtx, ?invo, _, _, ?tofunction),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  !ActualKeywordParam(_, ?invo, ?paramName, _).

ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  ResolvedFunctionHasActualKeywordParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, ?actual),
  FormalParam(?formalIndex, _, ?tofunction, ?formal),
  ResolvedFunctionNoActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex).

ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual):-
  ResolvedFunctionHasActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, ?actual),
  FormalParam(?formalIndex, _, ?tofunction, ?formal),
  ResolvedFunctionNoActualKeywordParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex).

ResolvedFunctionHasKeywordAndPositionalActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  ResolvedFunctionHasActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, _),
  ResolvedFunctionHasActualKeywordParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex, _).

ResolvedFunctionMissingActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  ResolvedFunctionNoActualPositionalParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex),
  ResolvedFunctionNoActualKeywordParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex).

//Last line is to avoid reporting missing actual or default param for the self arg of bound method calls
ResolvedFunctionMissingActualOrDefaultParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  ResolvedFunctionMissingActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex),
  !FormalParam_DefaultValForIndex(?tofunction, ?formalIndex, _),
  FunctionInvResolvesToNonSpecialFunction(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  !(isBoundMethodObjectAllocation(?baseValue), ?formalIndex = 0).


//----------------------------------------------------------------------------------------------------------------------
//                                              LSP DIAGNOSTIC ERRORS
//----------------------------------------------------------------------------------------------------------------------
DiagnosticForLSP(?file, "Error", ?startLine, ?endLine, ?startColumn, ?endColumn, ?errorMsg):-
  ResolvedFunctionMissingActualOrDefaultParamForIndex(_, ?insn, ?tofunction, ?formalIndex),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  Instruction_Function(?insn, ?function),
  Function_DeclaredInFile(?function, ?file),
  ?errorMsg = cat(cat(cat("Missing required parameter: ", ?paramName), " of function "),?tofunction),
  Instruction_SourcePosition(?insn, ?startLine, ?endLine, ?startColumn, ?endColumn).

DiagnosticForLSP(?file, "Error", ?startLine, ?endLine, ?startColumn, ?endColumn, ?errorMsg):-
  ResolvedFunctionHasKeywordAndPositionalActualParamForIndex(_, ?insn, ?tofunction, ?formalIndex),
  FormalParam(?formalIndex, ?paramName, ?tofunction, _),
  Instruction_Function(?insn, ?function),
  Function_DeclaredInFile(?function, ?file),
  ?errorMsg = cat(cat(cat("Function invocation has both named and positional parameter for : ", ?paramName), " of function "),?tofunction),
  Instruction_SourcePosition(?insn, ?startLine, ?endLine, ?startColumn, ?endColumn).

DiagnosticForLSP(?file, "Error", ?startLine, ?endLine, ?startColumn, ?endColumn, ?errorMsg):-
  ResolvedFunctionHasInvalidNumberOfActualParams(_, ?insn, ?tofunction),
  Instruction_Function(?insn, ?function),
  Function_DeclaredInFile(?function, ?file),
  FunctionInvocation_NumberOfActualParams(?insn, ?totalParams),
  Function_Arity(?tofunction, ?arity),
  ?errorMsg = cat(cat(cat(cat(cat("Function invocation of function ", ?tofunction), " has "), to_string(?totalParams)), " params while function arity is "), to_string(?arity)),
  Instruction_SourcePosition(?insn, ?startLine, ?endLine, ?startColumn, ?endColumn).

HoverInfoForLSP(?file, ?callerCtx, 0, ?startLine, ?endLine, ?startColumn, ?endColumn, ?hoverMsg, ?tofunction):-
  CallGraphEdge(?callerCtx, ?insn, _, ?tofunction),
  ?hoverMsg = "Function invocation resolves to ",
  Instruction_Function(?insn, ?function),
  Function_DeclaredInFile(?function, ?file),
  Instruction_SourcePosition(?insn, ?startLine, ?endLine, ?startColumn, ?endColumn).


HoverInfoForLSP(?file, ?callerCtx, 1 + ?index, ?startLine, ?endLine, ?startColumn, ?endColumn, ?hoverMsg, ?value):-
  ResolvedActualParamValue(?callerCtx, ?insn, ?tofunction, ?paramName, _, ?value),
  Value_Type(?value, ?type),
  ?type != "<tensorflow.Tensor>",
  ?hoverMsg = cat("Argument <b>", cat(?paramName, "</b> has value: ")),
  FormalParam(?index, ?paramName, ?tofunction, _),
  Instruction_Function(?insn, ?function),
  Function_DeclaredInFile(?function, ?file),
  Instruction_SourcePosition(?insn, ?startLine, ?endLine, ?startColumn, ?endColumn).


//----------------------------------------------------------------------------------------------------------------------
//                              CHECKING IF ALL REQUIRED PARAMS ARE PRESENT
//----------------------------------------------------------------------------------------------------------------------

ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex):-
  ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, _),
  FormalParam(?formalIndex, _, ?tofunction, ?formal).

ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, 0):-
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, _, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue).

ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, 0):-
  FunctionInvResolvesTo(?callerCtx, ?invo, _, _, ?tofunction),
  isMethod(?tofunction),
  Function_SimpleName(?tofunction, "__init__").

ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, 0):-
  ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, 0).

ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, ?index):-
  ResolvedFunctionHasActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?index),
  ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, ?index - 1).

ResolvedFunctionHasAllRequiredParams(?callerCtx, ?invo, ?tofunction):-
  ResolvedFunctionHasActualParamUptoIndex(?callerCtx, ?invo, ?tofunction, ?index),
  Function_NumOfRequiredParams(?tofunction, ?index + 1).

ResolvedFunctionHasAllRequiredParams(?callerCtx, ?invo, ?tofunction):-
  FunctionInvResolvesTo(?callerCtx, ?invo, _, _, ?tofunction),
  Function_NumOfRequiredParams(?tofunction, 0).


//----------------------------------------------------------------------------------------------------------------------
//                                 RESOLVED ACTUAL PARAM VALUE
//----------------------------------------------------------------------------------------------------------------------



VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  ResolvedFunctionActualParam(?callerCtx, ?invo, ?tofunction, ?formal, ?actual),
  FormalParam(_, ?paramName, ?tofunction, ?formal),
  VarPointsTo(?hctx, ?value, ?callerCtx, ?actual).




VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  ResolvedFunctionMissingActualParamForIndex(?callerCtx, ?invo, ?tofunction, ?formalIndex),
  FormalParam(?formalIndex, ?paramName, ?tofunction, ?formal),
  FormalParam_DefaultValForIndex(?tofunction, ?formalIndex, ?default),
  VarPointsTo(?hctx,  ?value, _, ?default).       //TODO: REVIEW this at some point

//----------------------------------------------------------------------------------------------------------------------
//            OLD RESOLVE ACTUAL PARAM VALUE CODE
#if(0)

//FOR NON BOUND METHODS AND FOR FUNCTION CALLS

// Interprocedural Assign
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  (
    ActualPositionalParam(?paramIndex, ?invo, ?actual);
    ActualKeywordParam(_, ?invo, ?paramName, ?actual)
  ),
  VarPointsTo(?hctx, ?value, ?callerCtx, ?actual).

// Interprocedural Assign
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  (
    ActualPositionalParam(?paramIndex - 1, ?invo, ?actual);
    ActualKeywordParam(_, ?invo, ?paramName, ?actual)
  ),
  VarPointsTo(?hctx, ?value, ?callerCtx, ?actual).


// Default arguments
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isUnboundMethodOrFunctionObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  !(
    ActualPositionalParam(?paramIndex, ?invo, _);
    ActualKeywordParam(_, ?invo, ?paramName, _)
  ),
  FormalParam_DefaultValForName(?tofunction, ?paramName, ?default),
  VarPointsTo(?hctx,  ?value, _, ?default).       //TODO: REVIEW this at some point

// Default arguments
VarPointsTo(?hctx, ?value, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?hctx, ?value):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  FormalParam(?paramIndex, ?paramName, ?tofunction, ?formal),
  !(
    ActualPositionalParam(?paramIndex - 1, ?invo, _);
    ActualKeywordParam(_, ?invo, ?paramName, _)
  ),
  FormalParam_DefaultValForName(?tofunction, ?paramName, ?default),
  VarPointsTo(?hctx,  ?value, _, ?default).       //TODO: REVIEW this at some point

#endif
//----------------------------------------------------------------------------------------------------------------------

//FOR BOUND METHOD CALLS
VarPointsTo(?selfHctx, ?selfVal, ?calleeCtx, ?formal),
ResolvedActualParamValue(?callerCtx, ?invo, ?tofunction, ?paramName, ?selfHctx, ?selfVal):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  FunctionInvResolvesTo(?callerCtx, ?invo, ?baseValue, ?basehctx, ?tofunction),
  isBoundMethodObjectAllocation(?baseValue),
  BoundMethodAllocationSelfArgument(?basehctx, ?baseValue, ?selfHctx, ?selfVal),
  FormalParam(0, ?paramName, ?tofunction, ?formal).

//VarPointsTo(?hctx, ?value, ?callerCtx, ?return):-
//  CallGraphEdge(?callerCtx, ?invo, _, ?tofunction),
//  ReachableContext(?callerCtx, ?function),
//  Instruction_Function(?invo, ?function),
//  AssignInstruction_To(?invo, ?return),
//  Instruction_Function(?retInsn, ?tofunction),
//  !(isReturnInstruction(?retInsn)),
//  isNoneValue(?value),
//  isImmutableHContext(?hctx).

VarPointsTo(?hctx, ?value, ?callerCtx, ?return):-
  CallGraphEdge(?callerCtx, ?invo, _, ?tofunction),
  ReachableContext(?callerCtx, ?function),
  Instruction_Function(?invo, ?function),
  AssignInstruction_To(?invo, ?return),
  isReturnNone_Insn(?retInsn),
  Instruction_Function(?retInsn, ?tofunction),
  isNoneValue(?value),
  isImmutableHContext(?hctx).

VarPointsTo(?hctx, ?value, ?callerCtx, ?return):-
  CallGraphEdge(?callerCtx, ?invo, ?calleeCtx, ?tofunction),
  !(isComprehensionFunction(?tofunction)),   //TODO: REVIEW THE PYTHON IR TO AVOID THIS UGLY HACK
  AssignInstruction_To(?invo, ?return),
  isReturnNonNone_Insn(?retInsn),
  Instruction_Function(?retInsn, ?tofunction),
  ReturnNonNone_Var(?retInsn, ?var),
  VarPointsTo(?hctx, ?value, ?calleeCtx, ?var).