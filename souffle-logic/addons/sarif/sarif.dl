// The rules below generate the metadata that drive SARIF generation.

// Populate this relation to add SARIF output for relations. Each
// tuple contains the following fields:
// name              : the name of the relation output (<name>.csv)
// doopIdPosition    : the index of the column containing the target element
//                     (given by a Doop id)
// contentType       : the type of element described by the Doop id (examples:
//                     JvmMethod, JvmField, JvmMethodInvocation)
// resultMessage     : the message to show on each element appearance -- this can
//                     contain binding placeholders, e.g. "@@1" is the contents of
//                     column 1 (zero-based) in the relation for the same Doop id
// ruleDescription   : the description of the general rule corresponding to the relation
// level             : the level of the information (such as "warning" or "error")
.decl SARIF_InterestingRelation(?name:symbol, ?doopIdPosition:number, ?contentType:symbol, ?resultMessage:symbol, ?ruleDescription:symbol, ?level:symbol)
.output SARIF_InterestingRelation

.output PhantomType
SARIF_InterestingRelation("PhantomType", 0, "JvmClass", "Type is phantom.", "Type is phantom, this could be an indication of missing code.", "warning").

#ifndef DISABLE_POINTS_TO
.output mainAnalysis.PhantomInvoke(IO="file",filename="PhantomInvoke.csv",delimiter="\t")
SARIF_InterestingRelation("PhantomInvoke", 0, "JvmMethodInvocation", "Invoked method is phantom.", "Invoked method is phantom, this could be an indication of missing code.", "warning").
#endif // DISABLE_POINTS_TO

#ifdef GENERATE_OPTIMIZATION_DIRECTIVES
SARIF_InterestingRelation("MethodToRemove", 0, "JvmMethod", "Method seems to be unused and can be removed.", "Method seems to be unused and can be removed.", "warning").
SARIF_InterestingRelation("SingleInvocationToInline", 0, "JvmMethodInvocation", "Invoked method can be inlined: @@1", "Invoked method can be inlined.", "warning").
#endif // GENERATE_OPTIMIZATION_DIRECTIVES

#ifndef DISABLE_POINTS_TO
#ifdef INFORMATION_FLOW
.output AppTaintedVarPointsTo
SARIF_InterestingRelation("AppTaintedVarPointsTo", 1, "JvmVariable", "Variable is tainted, points to @@0.", "Variable is tainted.", "warning").
SARIF_InterestingRelation("LeakingTaintedInformation", 3, "JvmMethodInvocation", "Tainted sink, source = @@4", "Tainted sink method invocation.", "warning").
#endif // INFORMATION_FLOW
#endif // DISABLE_POINTS_TO

#ifdef X_SERVER_LOGIC
SARIF_InterestingRelation("Server_Field_ShadowedBy", 0, "JvmField", "Field is shadowed by field @@1", "Field is shadowed.", "warning").
#endif // X_SERVER_LOGIC

#ifndef DISABLE_POINTS_TO
#if STATS_LEVEL == full
.output Stats_Simple_PotentiallyFailingCast
SARIF_InterestingRelation("Stats_Simple_PotentiallyFailingCast", 2, "JvmVariable", "Reachable cast may fail: @@2 = (@@0) @@1 ", "Reachable cast may fail.", "warning").
#endif // STATS_LEVEL == full
#endif // DISABLE_POINTS_TO
