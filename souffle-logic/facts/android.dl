.decl FieldInitialValue(?fld:Field, ?valueString:symbol)
.decl Activity(?x:ReferenceType)
.decl Service(?x:ReferenceType)
.decl ContentProvider(?x:ReferenceType)
.decl BroadcastReceiver(?x:ReferenceType)
.decl AndroidCallbackMethodName(?methodName:symbol)
.decl LayoutControl(?id:symbol, ?type:ReferenceType, ?parent:symbol)
.decl LayoutControl0(?id:symbol, ?typename:ReferenceType, ?parent:symbol)
.decl SensitiveLayoutControl(?id:symbol, ?type:ReferenceType, ?parent:symbol)
.decl SensitiveLayoutControl0(?id:symbol, ?typename:ReferenceType, ?parent:symbol)
.decl AndroidEntryPoint(?m:Method)
.decl AndroidApplication(?t:ClassType)
.decl AndroidId(?file:symbol, ?nodeId:symbol, ?value:symbol, ?prefix:symbol, ?id:symbol)
.decl AndroidIncludeXML(?file:symbol, ?nodeId:symbol, ?value:symbol)


// AndroidEntryPoint
.input AndroidEntryPoint(filename="AndroidEntryPoint.facts")

// AndroidApplication
.input AndroidApplication(filename="AndroidApplication.facts")

// Activity
.input Activity(filename="Activity.facts")
isType(?id) :-
	Activity(?id).

// Service
.input Service(filename="Service.facts")
isType(?id) :-
	Service(?id).

// ContentProvider
.input ContentProvider(filename="ContentProvider.facts")
isType(?id) :-
	ContentProvider(?id).

// BroadcastReceiver
.input BroadcastReceiver(filename="BroadcastReceiver.facts")
isType(?id) :-
	BroadcastReceiver(?id).

// CallbackMethod
.input AndroidCallbackMethodName(filename="AndroidCallbackMethodName.facts")

// LayoutControl
.input LayoutControl0(filename="LayoutControl.facts")

// SensitiveLayoutControl
.input SensitiveLayoutControl0(filename="SensitiveLayoutControl.facts")

// FieldInitialValue
.input FieldInitialValue(filename="FieldInitialValue.facts")

.input AndroidId(filename="AndroidId.facts")
.input AndroidIncludeXML(filename="AndroidIncludeXML.facts")

// NumConstantRawInt

.decl ArrayInitialValueFromConst(?instruction:Instruction, ?index:number, ?to:Var, ?arrayIndex:number, ?const:symbol, ?baseHeap:HeapAllocation, ?method:Method)
.input ArrayInitialValueFromConst(filename="ArrayInitialValueFromConst.facts")

isInstruction(?instruction),
Instruction_Index(?instruction, ?index),
Instruction_Method(?instruction, ?method) :-
  ArrayInitialValueFromConst(?instruction, ?index, _, _, _, _, ?method).

CreateIntValue(?const, "java.lang.Object") :-
  NumConstantRawInt(?const),
  ( ArrayInitialValueFromConst(_, _, _, _, ?const, _, _)
  ; ArrayInitialValueFromConst(_, _, _, _, ?const, _, _)).

.decl ArrayInitialValueFromLocal(?instruction:Instruction, ?index:number, ?to:Var, ?arrayIndex:number, ?from:Var, ?baseHeap:HeapAllocation, ?method:Method)
.input ArrayInitialValueFromLocal(filename="ArrayInitialValueFromLocal.facts")

// Note that this is more than a straightforward import of generated facts into
// a DB relation. It filters out the guessed control types that do not
// correspond to existing types. Relations LayoutControl0 and
// SensitiveLayoutControl0 may also come from XML facts (see android-xml.dl).

LayoutControl(?id, ?type, ?parent) :-
  LayoutControl0(?id, ?type, ?parent),
  QUAL_CONTROL_TYPE(?type, ?qType),
  isType(?qType).

SensitiveLayoutControl(?id, ?type, ?parent) :-
  SensitiveLayoutControl0(?id, ?type, ?parent),
  QUAL_CONTROL_TYPE(?type, ?qType),
  isType(?qType).

// Native UnixFileSystem objects, different in Android and OpenJDK.
MockHeapConsMacro(?heap, ?type) :-
  ?heap = "<java.io.UnixFileSystem: java.lang.String[] list0(java.io.File)>/new java.lang.String[]/0",
  ?type = "java.lang.String[]".

MockHeapConsMacro(?heap, ?type) :-
  ?heap = "<java.io.UnixFileSystem: java.lang.String[] list0(java.io.File)>/new java.lang.String/0",
  ?type = "java.lang.String".
