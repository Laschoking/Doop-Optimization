#pragma once

.decl Schema_ArrayRelation(relName:symbol, array:Var, types:symbol)
.decl Schema_ArraySizes(relName:symbol, array:Var, dim:number, size:number)
.decl AllocArraySize_EXT(stmt:Instruction, size:number)
.decl ArrayDimSize(array:Var, dim:number, size:number)

.output Schema_ArrayRelation
.output Schema_ArraySizes
.output AllocArraySize_EXT
.output ArrayDimSize

Schema_ArrayRelation(relName, array, type) :-
	InterestingStmt(stmt),
	AssignInstruction_To(stmt, array),
	Var_Type(array, type),
	isArrayType(type),
	!StoreArrayIndex_From(_, array),
	relName = cat("ArrayRelation_", to_string(ord(array))).

AllocArraySize_EXT(stmt, size) :-
	InterestingStmt(stmt),
	AllocArraySize_NUM(stmt, _, size).

AllocArraySize_EXT(stmt, size) :-
	InterestingStmt(stmt),
	AllocArraySize_VAR(stmt, _, var),
	VarToIntValue(var, size).

ArrayDimSize(array, 0, size) :-
	InterestingStmt(stmt),
	AssignInstruction_To(stmt, array),
	AllocArraySize_EXT(stmt, size).

ArrayDimSize(baseArray, dim + 1, size) :-
	InterestingStmt(stmt),
	StoreArrayIndex_Base(stmt, baseArray),
	StoreArrayIndex_From(stmt, array),
	ArrayDimSize(array, dim, size).

Schema_ArraySizes(relName, array, dim, size) :-
	Schema_ArrayRelation(relName, array, _),
	ArrayDimSize(array, dim, size).


.decl VarToIntValue(var:Var, value:number)

VarToIntValue(var, to_number(const)) :-
	VarHasExpr(var, expr),
	Normalize(expr, normExpr),
	IsConstantExpr(normExpr, const).

VarToIntValue(var, -1) :-
	isVar(var),
	(!VarHasExpr(var, _) ;
	 (VarHasExpr(var, expr),
	  Normalize(expr, normExpr),
	  !IsConstantExpr(normExpr, _))).


.decl ArrayIndex_EXT(stmt:Instruction, index:number)
.output ArrayIndex_EXT

ArrayIndex_EXT(stmt, index) :-
	InterestingStmt(stmt),
	ArrayNumIndex(stmt, index).

ArrayIndex_EXT(stmt, index) :-
	InterestingStmt(stmt),
	ArrayInsnIndex(stmt, var),
	VarToIntValue(var, index).

.decl ArrayIndexHasValue(array:Var, dim:number, index:number, value:number)
.output ArrayIndexHasValue

ArrayIndexHasValue(array, 0, index, value) :-
	InterestingStmt(stmt),
	StoreArrayIndex_Base(stmt, array),
	ArrayIndex_EXT(stmt, index),
	StoreArrayIndex_From(stmt, valueVar),
	VarToIntValue(valueVar, value).

ArrayIndexHasValue(baseArray, 0, index, value),
ArrayIndexHasValue(baseArray, dim + 1, dimIndex, value) :-
	InterestingStmt(stmt),
	LoadArrayIndex_Base(stmt, baseArray),
	ArrayIndex_EXT(stmt, index),
	LoadArrayIndex_To(stmt, array),
	ArrayIndexHasValue(array, dim, dimIndex, value).