// Context-sensitive pointer analysis with context of 2 objects
// (AND for static calls 1 call-site).
#include "../../main/single-phase-analysis.dl"
#include "../../main/configuration.dl"

.comp SelectiveTwoObjectSensitivePlusHeapConfiguration : AbstractConfiguration {

// Do not indent: this breaks some cpp versions.
#define NO_INVOCATION_CONTEXT "<<no-call-site-context>>"

  // The real context is a pair of Value AND a MethodInvocation (for
  // static calls) sometimes.  The real heap context is a single Value.
  // Keeping mapping functions is the way to handle analyses where HContext =
  // Context (since the language considers them different types).
  .type Context  = [ elem1:symbol, elem2:symbol ]
  .type HContext = [ value:mainAnalysis.Value ]

  .decl JavaUtilMethod(?method:Method)
    JavaUtilMethod(?method) :-
      Method_DeclaringType(?method, ?type),
      match("java\.util\..*", ?type).

  ContextResponse(?callerCtx, ?hctx, ?invo, ?value, ?calleeCtx) :-
    ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tomethod, _),
    ?hctx = [?hctxValue],
    ?calleeCtx = [?hctxValue, ?value],
    ?tomethod = ?tomethod.

  StaticContextResponse(?callerCtx, ?invo, ?calleeCtx) :-
    StaticContextRequest(?callerCtx, ?invo),
    MethodInvocation_Method(?invo, ?tomethod),
    !JavaUtilMethod(?tomethod),
    ?callerCtx = [?callerCtxElement1,  ?callerCtxValue],
    ?calleeCtx = [?callerCtxValue, ?invo],
    ?callerCtxElement1 = ?callerCtxElement1.

  StaticContextResponse(?callerCtx, ?invo, ?calleeCtx) :-
    StaticContextRequest(?callerCtx, ?invo),
    MethodInvocation_Method(?invo, ?tomethod),
    JavaUtilMethod(?tomethod),
    ?calleeCtx = ?callerCtx.

  RecordContextResponse(?ctx, ?value, ?var, ?hctx) :-
    RecordContextRequest(?ctx, ?value, ?var),      
    ?ctx = [?ctxElement1, ?ctxValue],
    ?hctx = [?ctxValue],
    ?ctxElement1 = ?ctxElement1.

  InitContextResponse(?value, ?ctx) :-
    InitContextRequest(?value),
    ?ctx = [?value, ?value].

  InitHContextResponse(?value, ?hctx) :-
    InitHContextRequest(?value),
    ?hctx = [?value].
}
