.comp BasicContextSensitivity<Configuration> : AbstractContextSensitivity<Configuration> {

configuration.StaticContextRequest(?callerCtx, ?invocation) :-
  ReachableContext(?callerCtx, ?inmethod),
  StaticMethodInvocation(?invocation, _, ?inmethod).

// The main analysis is merely looking up the previously created
// context objects.

#ifdef ZIPPER

.decl ZipperPrecisionCriticalMethod(?method:Method)
.input ZipperPrecisionCriticalMethod(IO="file",filename="ZipperPrecisionCriticalMethod.facts",delimiter="\t")

// special invocation
isContext(?calleeCtx),
CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod) :-
  configuration.ContextRequest(?callerCtx, ?hctx, ?invocation, ?value, ?tomethod, 1),
  configuration.ContextResponse(?callerCtx, ?hctx, ?invocation, ?value, ?calleeCtx),
  ZipperPrecisionCriticalMethod(?tomethod).
#ifndef X_CONTEXT_REMOVER
// .plan 1:(2,1,3,4)
#endif

CallGraphEdge(?callerCtx, ?invocation, ?immCtx, ?tomethod) :-
  configuration.ContextRequest(?callerCtx, ?hctx, ?invocation, ?value, ?tomethod, 1),
  configuration.ContextResponse(?callerCtx, ?hctx, ?invocation, ?value, ?calleeCtx),   
  isImmutableContext(?immCtx),
  !ZipperPrecisionCriticalMethod(?tomethod).
#ifndef X_CONTEXT_REMOVER
// .plan 1:(2,1,3,4)
#endif

// static invocation

isContext(?calleeCtx),
CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod) :-
  configuration.StaticContextResponse(?callerCtx, ?invocation, ?calleeCtx),
  MethodInvocation_Method(?invocation, ?tomethod),
  ZipperPrecisionCriticalMethod(?tomethod).

CallGraphEdge(?callerCtx, ?invocation, ?immCtx, ?tomethod) :-
  configuration.StaticContextResponse(?callerCtx, ?invocation, _),
  isImmutableContext(?immCtx),
  MethodInvocation_Method(?invocation, ?tomethod),
  !ZipperPrecisionCriticalMethod(?tomethod).

#else
// Original rules

isContext(?calleeCtx),
CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod) :-
  configuration.ContextRequest(?callerCtx, ?hctx, ?invocation, ?value, ?tomethod, 1),
  configuration.ContextResponse(?callerCtx, ?hctx, ?invocation, ?value, ?calleeCtx).
#ifndef X_CONTEXT_REMOVER
 .plan 1:(2,1)
#endif

isContext(?calleeCtx),
CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod) :-
  configuration.StaticContextResponse(?callerCtx, ?invocation, ?calleeCtx),
  MethodInvocation_Method(?invocation, ?tomethod).

#endif // ZIPPER
}
